name: CI

on:
  pull_request:
  push:
    branches:
      - 'master'

jobs:
  build:
    environment: Release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout commit
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install Node
      uses: actions/setup-node@v2.3.0
      with:
        node-version: 'lts/*'

    - name: Install Rust
      uses: hecrj/setup-rust-action@v1
      with:
        rust-version: nightly
        components: rust-src
        targets: wasm32-unknown-unknown

    - name: Download binaryen
      uses: robinraju/release-downloader@v1.7
      with:
        repository: "WebAssembly/binaryen"
        latest: true
        fileName: "binaryen-*-x86_64-linux.tar.gz"
        out-file-path: "/home/runner/.cargo/bin"

    - name: Install binaryen
      run: |
        cd ~/.cargo/bin
        tar -xzf binaryen-*-x86_64-linux.tar.gz
        mv binaryen*/bin/wasm* .

    - name: Choose wasm-bindgen-cli version
      run: echo "version=$(cd livesplit-core && cargo tree -i wasm-bindgen --features wasm-web --target wasm32-unknown-unknown --depth 0 | sed 's/.* v//g')" >> $GITHUB_OUTPUT
      id: wasm-bindgen

    - name: Download wasm-bindgen-cli
      uses: robinraju/release-downloader@v1.7
      with:
        repository: "rustwasm/wasm-bindgen"
        tag: ${{ steps.wasm-bindgen.outputs.version }}
        fileName: "wasm-bindgen-${{ steps.wasm-bindgen.outputs.version }}-x86_64-unknown-linux-musl.tar.gz"
        out-file-path: "/home/runner/.cargo/bin"

    - name: Install wasm-bindgen-cli
      run: |
        cd ~/.cargo/bin
        tar -xzf wasm-bindgen-${{ steps.wasm-bindgen.outputs.version }}-x86_64-unknown-linux-musl.tar.gz
        mv wasm-bindgen-${{ steps.wasm-bindgen.outputs.version }}-x86_64-unknown-linux-musl/wasm* .

    - name: Install npm packages
      run: npm ci
      env:
        DETECT_CHROMEDRIVER_VERSION: true

    - name: Build Core
      run: npm run build:core:deploy

    - name: Build Frontend
      run: npm run publish

    - name: Optimize
      run: |
        WASM_FILE=$(ls dist/*.wasm)
        wasm-opt -O4 "$WASM_FILE" -o "$WASM_FILE"

    - name: Bundle pages
      run: |
        set -eux
        mkdir -p ./vr.jf.id.au/dist/vr.jf.id.au/htdocs
        mv ./dist ./vr.jf.id.au/dist/vr.jf.id.au/htdocs/livesplit
    - name: Upload to vr.jf.id.au
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ftpupload.net
        protocol: ftps
        username: if0_34708249
        password: ${{ secrets.IF_FTP_PASSWORD }}
        local-dir: ./pages/dist/vr.jf.id.au/
